// Generated by toolgen. DO NOT EDIT.
// Generated from tool specification:
//   _build/specifications/lefthook.json

package run

import (
	"github.com/stephenwilliams/go-clitools/internal/defaults"
	"github.com/stephenwilliams/go-clitools/tools"
	"github.com/stephenwilliams/go-clitools/tools/lefthook"
)

// Execute group of hooks
func Run(hooksGroup string, opts ...RunOpt) *tools.CommandContext {
	options := &runOptions{}

	for _, optFunc := range opts {
		optFunc(options)
	}

	var _args []string
	_args = append(_args, "run")

	_args = append(_args, options.toArgs()...)
	_args = append(_args, hooksGroup)

	return &tools.CommandContext{
		Args: _args,
		Path: tools.MustResolveTool(lefthook.LefthookToolInfo, defaults.String(options.ToolVersion, lefthook.DefaultToolVersion), options.ToolProvider, lefthook.DefaultToolProvider, tools.DefaultToolProvider),
	}
}

type RunOpt func(*runOptions)

func SetToolProvider(p tools.ToolProvider) RunOpt {
	return func(opts *runOptions) {
		opts.ToolProvider = p
	}
}

func SetToolVersion(v string) RunOpt {
	return func(opts *runOptions) {
		opts.ToolVersion = v
	}
}

type runOptions struct {
	ToolProvider tools.ToolProvider
	ToolVersion  string
}

func (o *runOptions) toArgs() []string {
	var renderedArgs []string

	return renderedArgs
}
